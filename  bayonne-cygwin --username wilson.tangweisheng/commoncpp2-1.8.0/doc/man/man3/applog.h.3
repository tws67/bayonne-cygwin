.TH "applog.h" 3 "2 May 2010" "GNU CommonC++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
applog.h \- 
.PP
Application logging facilities abstraction.  

.SH SYNOPSIS
.br
.PP
\fC#include <cc++/slog.h>\fP
.br
\fC#include <cc++/exception.h>\fP
.br
\fC#include <string>\fP
.br
\fC#include <sstream>\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <map>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBost::HEXdump\fP"
.br
.RI "\fIProduces a dump of a buffer in a hexdump way with its code Ascii translation and relative buffer address. \fP"
.ti -1c
.RI "class \fBost::AppLogException\fP"
.br
.RI "\fIApplog exception, used for memory problems at the moment. \fP"
.ti -1c
.RI "class \fBost::AppLog\fP"
.br
.RI "\fIApplication logger is a class that implements a logger that can be used by applications to save log file somewhere on the system. \fP"
.ti -1c
.RI "class \fBost::AppLog::Ident\fP"
.br
.RI "\fI\fBIdent\fP class that represents module name. \fP"
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBost\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "__EXPORT AppLog & \fBost::debug\fP (AppLog &sl)"
.br
.RI "\fIManipulator for debug level. \fP"
.ti -1c
.RI "__EXPORT AppLog & \fBost::warn\fP (AppLog &sl)"
.br
.RI "\fIManipulator for warn level. \fP"
.ti -1c
.RI "__EXPORT AppLog & \fBost::error\fP (AppLog &sl)"
.br
.RI "\fIManipulator for error level. \fP"
.ti -1c
.RI "__EXPORT AppLog & \fBost::emerg\fP (AppLog &sl)"
.br
.RI "\fIManipulator for emerg level. \fP"
.ti -1c
.RI "__EXPORT AppLog & \fBost::alert\fP (AppLog &sl)"
.br
.RI "\fIManipulator for alert level. \fP"
.ti -1c
.RI "__EXPORT AppLog & \fBost::critical\fP (AppLog &sl)"
.br
.RI "\fIManipulator for critical level. \fP"
.ti -1c
.RI "__EXPORT AppLog & \fBost::notice\fP (AppLog &sl)"
.br
.RI "\fIManipulator for notice level. \fP"
.ti -1c
.RI "__EXPORT AppLog & \fBost::info\fP (AppLog &sl)"
.br
.RI "\fIManipulator for info level. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "__EXPORT AppLog \fBost::alog\fP"
.br
.RI "\fIalog global log stream definition \fP"
.in -1c
.SH "Detailed Description"
.PP 
Application logging facilities abstraction. 


.SH "Author"
.PP 
Generated automatically by Doxygen for GNU CommonC++ from the source code.
