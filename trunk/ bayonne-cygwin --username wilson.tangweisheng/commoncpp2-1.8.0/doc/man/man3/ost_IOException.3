.TH "ost::IOException" 3 "2 May 2010" "GNU CommonC++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ost::IOException \- 
.PP
A sub-hierarchy for all Common C++ I/O related classes.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <exception.h>\fP
.PP
Inherits \fBost::Exception\fP.
.PP
Inherited by \fBost::DirException\fP, \fBost::DSOException\fP, \fBost::FileException\fP, \fBost::IOZException\fP, \fBost::SerException\fP, and \fBost::SockException\fP.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBIOException\fP (const \fBString\fP &what_arg, long systemError=0)  throw ()"
.br
.ti -1c
.RI "virtual \fB~IOException\fP ()  throw ()"
.br
.ti -1c
.RI "virtual long \fBgetSystemError\fP () const   throw ()"
.br
.ti -1c
.RI "virtual const char * \fBgetSystemErrorString\fP () const   throw ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
A sub-hierarchy for all Common C++ I/O related classes. 

\fBAuthor:\fP
.RS 4
David Sugar <dyfet@ostel.com> I/O operation exception hierarchy. 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "ost::IOException::IOException (const \fBString\fP & what_arg, long systemError = \fC0\fP)  throw ()"
.SS "virtual ost::IOException::~IOException ()  throw ()\fC [virtual]\fP"
.SH "Member Function Documentation"
.PP 
.SS "virtual long ost::IOException::getSystemError () const  throw ()\fC [virtual]\fP"
.SS "virtual const char* ost::IOException::getSystemErrorString () const  throw ()\fC [virtual]\fP"
.PP
\fBExamples: \fP
.in +1c
\fBtcp.cpp\fP.

.SH "Author"
.PP 
Generated automatically by Doxygen for GNU CommonC++ from the source code.
